@model IEnumerable<MODALobj.newProduct>
@*@model MODALobj.newProduct*@

@{
                /**/

                ViewBag.Title = "Edit";
                Layout = "~/Areas/ControlPanel/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@if (Model.Any())
{
    foreach (var item in Model)
    {

        using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>newProduct</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => item.Product_id, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.Product_id, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.Product_id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.p_Ename, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.p_Ename, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.p_Ename, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.p_price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.p_price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.p_price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.p_weight_type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.p_weight_type, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.p_weight_type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.p_imge, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.p_imge, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.p_imge, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.p_hname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.p_hname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.p_hname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.Category, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
    }

}
else
{


    @*using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>newProduct</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => item.Product_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.Product_id, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.Product_id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.p_Ename, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.p_Ename, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.p_Ename, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.p_price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.p_price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.p_price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.p_weight_type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.p_weight_type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.p_weight_type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.p_imge, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.p_imge, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.p_imge, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.p_hname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.p_hname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.p_hname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => item.Category, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => item.Category, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }*@
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
